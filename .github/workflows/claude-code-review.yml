name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

    # Note: Branch exclusions are handled in the job 'if' condition below
    # To exclude more branches, add them to the job condition

jobs:
  claude-review:
    # Skip Claude review for certain branch patterns
    if: |
      !startsWith(github.head_ref, 'docs/') &&
      !startsWith(github.head_ref, 'chore/update-deps') &&
      !contains(github.event.pull_request.title, '[skip-review]') &&
      !contains(github.event.pull_request.title, '[no-review]')

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Run type check
        id: typecheck
        run: |
          echo "Running type check..."
          if bun run check-types; then
            echo "typecheck_passed=true" >> $GITHUB_OUTPUT
            echo "✅ Type check passed"
          else
            echo "typecheck_passed=false" >> $GITHUB_OUTPUT
            echo "❌ Type check failed"
            exit 1
          fi

      - name: Run lint check
        id: lint
        run: |
          echo "Running lint check..."
          if bun run lint; then
            echo "lint_passed=true" >> $GITHUB_OUTPUT
            echo "✅ Lint check passed"
          else
            echo "lint_passed=false" >> $GITHUB_OUTPUT
            echo "❌ Lint check failed"
            exit 1
          fi

      - name: Run Biome format check
        id: biome
        run: |
          echo "Running Biome format check..."
          if bunx @biomejs/biome check .; then
            echo "biome_passed=true" >> $GITHUB_OUTPUT
            echo "✅ Biome format check passed"
          else
            echo "biome_passed=false" >> $GITHUB_OUTPUT
            echo "❌ Biome format check failed"
            echo "Run 'bun run check:fix' to fix formatting issues"
            exit 1
          fi

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        # Only run if all checks pass
        if: |
          steps.typecheck.outputs.typecheck_passed == 'true' &&
          steps.lint.outputs.lint_passed == 'true' &&
          steps.biome.outputs.biome_passed == 'true'
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          model: "claude-opus-4-20250514"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            All automated checks have passed:
            - ✅ Type check passed
            - ✅ Lint check passed
            - ✅ Biome format check passed

            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage
            - Architecture and design patterns

            Be constructive and helpful in your feedback.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          use_sticky_comment: true

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

          # Optional: Add specific tools for running tests or linting
          allowed_tools: "Bash(bun run lint),Bash(bun run check-types),Bash(bun run check:fix)"

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

      - name: Add job summary
        if: failure()
        run: |
          echo "## ❌ Automated Checks Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The following checks need to pass before Claude can review your PR:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ steps.typecheck.outputs.typecheck_passed }}" == "false" ]]; then
            echo "- ❌ **Type Check Failed** - Run \`bun run check-types\` to see errors" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ✅ Type Check Passed" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ steps.lint.outputs.lint_passed }}" == "false" ]]; then
            echo "- ❌ **Lint Check Failed** - Run \`bun run lint\` to see errors" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ✅ Lint Check Passed" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ steps.biome.outputs.biome_passed }}" == "false" ]]; then
            echo "- ❌ **Biome Format Check Failed** - Run \`bun run check:fix\` to auto-fix" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ✅ Biome Format Check Passed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please fix these issues and push your changes to trigger a new review." >> $GITHUB_STEP_SUMMARY
